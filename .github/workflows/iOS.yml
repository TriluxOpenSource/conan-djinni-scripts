name: iOS

env:
  CONAN_REPOSITORY: https://api.bintray.com/conan/triluxitz/LiveLink_App
  CONAN_REPOSITORY_NAME: trilux
  CONAN_PACKAGE_NAME: djinni
  CONAN_USER: trilux
  CONAN_CHANNEL: stable
  CONAN_REPO_USER: jenkins@triluxitz

on:
  create:
    ref_type: tag

jobs:

  djinni-jar:
    runs-on: ubuntu-18.04
    env:
      GITHUB_OS_NAME: linux
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.sha }}
    - name: checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive
    - name: install scala
      run: ${GITHUB_WORKSPACE}/.github/scripts/scala-sbt-setup.sh
    - name: build djinni.jar
      run: ${GITHUB_WORKSPACE}/.github/scripts/build-djinni-jar.sh
    - uses: actions/upload-artifact@master
      with:
        name: djinni_binary
        path: bin
  
  Device-Release:
    runs-on: macos-latest
    needs: djinni-jar
    env:
      GITHUB_OS_NAME: macos
      DEVELOPER_DIR: /Applications/Xcode_11.1.app/Contents/Developer
      CONAN_PWD: ${{ secrets.CONAN_PWD }}
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.sha }}
    - name: checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive
    - uses: actions/download-artifact@master
      with:
        name: djinni_binary
        path: bin
    - name: get version from tag
      run: echo ::set-env name=LIBRARY_VERSION::$(echo ${GITHUB_REF:10})
    - name: install and setup conan
      run: ${GITHUB_WORKSPACE}/.github/scripts/conan-setup.sh
    - name: create conan packages
      run: ${GITHUB_WORKSPACE}/.github/scripts/build-ios.sh armv8 Release
    - name: deploy conan packages
      run: ${GITHUB_WORKSPACE}/.github/scripts/conan-deploy.sh

  Device-Debug:
    runs-on: macos-latest
    needs: djinni-jar
    env:
      GITHUB_OS_NAME: macos
      DEVELOPER_DIR: /Applications/Xcode_11.1.app/Contents/Developer
      CONAN_PWD: ${{ secrets.CONAN_PWD }}
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.sha }}
    - name: checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive
    - uses: actions/download-artifact@master
      with:
        name: djinni_binary
        path: bin
    - name: get version from tag
      run: echo ::set-env name=LIBRARY_VERSION::$(echo ${GITHUB_REF:10})
    - name: install and setup conan
      run: ${GITHUB_WORKSPACE}/.github/scripts/conan-setup.sh
    - name: create conan packages
      run: ${GITHUB_WORKSPACE}/.github/scripts/build-ios.sh armv8 Debug
    - name: deploy conan packages
      run: ${GITHUB_WORKSPACE}/.github/scripts/conan-deploy.sh

  Simulator:
    runs-on: macos-latest
    needs: djinni-jar
    env:
      GITHUB_OS_NAME: macos
      DEVELOPER_DIR: /Applications/Xcode_11.1.app/Contents/Developer
      CONAN_PWD: ${{ secrets.CONAN_PWD }}
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.sha }}
    - name: checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive
    - uses: actions/download-artifact@master
      with:
        name: djinni_binary
        path: bin
    - name: get version from tag
      run: echo ::set-env name=LIBRARY_VERSION::$(echo ${GITHUB_REF:10})
    - name: install and setup conan
      run: ${GITHUB_WORKSPACE}/.github/scripts/conan-setup.sh
    - name: create conan packages
      run: ${GITHUB_WORKSPACE}/.github/scripts/build-ios.sh x86_64 Debug
    - name: deploy conan packages
      run: ${GITHUB_WORKSPACE}/.github/scripts/conan-deploy.sh
